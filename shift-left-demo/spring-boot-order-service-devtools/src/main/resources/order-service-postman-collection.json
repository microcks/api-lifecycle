{
	"info": {
		"_postman_id": "46a4acbb-b729-4a8d-9ce2-f5ddc186e2c8",
		"name": "Order Service API",
		"description": "version=0.1.0 - Oorder Service collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1278651",
		"_collection_link": "https://www.postman.com/lbroudoux/workspace/public-workspace/collection/1278651-46a4acbb-b729-4a8d-9ce2-f5ddc186e2c8?action=share&source=collection_link&creator=1278651"
	},
	"item": [
		{
			"name": "orders",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var requestProductQuantities = JSON.parse(pm.request.body.raw).productQuantities;",
									"",
									"if (pm.response.code === 201) {",
									"    pm.test(\"Correct products and quantities in order\", function () {",
									"        var order = pm.response.json();",
									"        var productQuantities = order.productQuantities",
									"        pm.expect(productQuantities).to.be.an(\"array\");",
									"        pm.expect(productQuantities.length).to.eql(requestProductQuantities.length);",
									"        for (let i=0; i<requestProductQuantities.length; i++) {",
									"            var productQuantity = productQuantities[i];",
									"            var requestProductQuantity = requestProductQuantities[i];",
									"            pm.expect(productQuantity.productName).to.eql(requestProductQuantity.productName)",
									"            pm.expect(productQuantity.quantity).to.eql(requestProductQuantity.quantity)",
									"        }",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http:///orders",
							"protocol": "http",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}