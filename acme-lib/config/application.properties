# Async mocking support.
async-api.enabled=true

# Access to Microcks API server.
%docker-compose.io.github.microcks.minion.async.client.MicrocksAPIConnector/mp-rest/url=http://microcks:8080

# Access to Keycloak through docker network
%docker-compose.keycloak.auth.url=http://keycloak:8080

# Access to Kafka broker.
%docker-compose.kafka.bootstrap.servers=kafka:19092

# Do not save any consumer-offset on the broker as there's a re-sync on each minion startup.
%docker-compose.mp.messaging.incoming.microcks-services-updates.enable.auto.commit=false
%docker-compose.mp.messaging.incoming.microcks-services-updates.bootstrap.servers=kafka:19092


%docker-compose.kafka.security.protocol=SASL_SSL
%docker-compose.kafka.sasl.mechanism=OAUTHBEARER
%docker-compose.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required kid="ABCDefgh11Pi7jKLMNOpq-R0s3TuVWxyzAbcDEFgHI0" login.id="kafka_producer_prem";
%docker-compose.kafka.sasl.login.callback.handler.class=org.acme.lib.CustomAuthenticateCallbackHandler

%docker-compose.mp.messaging.incoming.microcks-services-updates.security.protocol=SASL_SSL
%docker-compose.mp.messaging.incoming.microcks-services-updates.sasl.mechanism=OAUTHBEARER
%docker-compose.mp.messaging.incoming.microcks-services-updates.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required kid="ABCDefgh11Pi7jKLMNOpq-R0s3TuVWxyzAbcDEFgHI0" login.id="kafka_producer_prem";
%docker-compose.mp.messaging.incoming.microcks-services-updates.sasl.login.callback.handler.class=org.acme.lib.CustomAuthenticateCallbackHandler


# Explicitly telling the minion the protocols we want to support
%docker-compose.minion.supported-bindings=KAFKA,WS

# %docker-compose.minion.supported-bindings=KAFKA,WS,MQTT,AMQP,NATS

# %docker-compose.mqtt.server=localhost:1883
# %docker-compose.mqtt.username=microcks
# %docker-compose.mqtt.password=microcks

# %docker-compose.amqp.server=localhost:5672
# %docker-compose.amqp.username=microcks
# %docker-compose.amqp.password=microcks
